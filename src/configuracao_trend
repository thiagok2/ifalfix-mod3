
obs codigo ja esta no FilmeServiceApi
// --- IMPORTAÇÃO DO SERVIÇO CORRETO ---
// Trocamos o ComentariosService pelo FilmesServiceApi, que tem a função que busca na internet
import FilmesServiceApi from '../Services/FilmesServiceApi'; 
import './ComentariosContainer.css'
import { FaStar } from "react-icons/fa";
import { useState, useEffect } from 'react';

function ComentariosContainer({ filme, showAvaliacao = true }) {

  // --- MUDANÇA 1: Criamos um estado para guardar os comentários da API ---
  const [listaComentarios, setListaComentarios] = useState([]);
  const [carregando, setCarregando] = useState(true);

  // --- MUDANÇA 2: useEffect para buscar os comentários da API ---
  useEffect(() => {
    // Verificamos se temos um filme com id e tipo antes de buscar
    if (filme && filme.id && filme.tipo) {
      const buscarComentarios = async () => {
        setCarregando(true);
        // Usamos a função do seu serviço para buscar os comentários na API
        const resultados = await FilmesServiceApi.getComentarios(filme.id, filme.tipo);
        setListaComentarios(resultados);
        setCarregando(false);
      };

      buscarComentarios();
    }
  }, [filme]); // Roda sempre que o filme mudar

  // Se estiver carregando, mostra uma mensagem
  if (carregando) {
    return <div>Carregando comentários...</div>;
  }
  
  // Se não houver comentários, não renderiza nada
  if (listaComentarios.length === 0) {
    return null;
  }

  return (
    <div className='all-container'>
      {
        showAvaliacao && 
          <div className='info-avaliacao'>
            <strong>Avaliação Média: </strong>
            <strong className='avaliação-texto'>
              <span> <FaStar className='estrela' /> {filme.nota_avaliacao}/10</span>
            </strong>
          </div>
      }
      
      <div className="comentario-container">
          <strong className='avalicao'>Avaliações da Comunidade</strong>

          {/* --- MUDANÇA 3: O map agora usa a lista de comentários do estado --- */}
          <div className='lista-comentarios'>
            {
              listaComentarios.map((comentario) => (
                <div className='comentario' key={comentario.id}>
                  <div className="comentario-header">
                    {/* A API pode não fornecer um avatar, então usamos um genérico */}
                    <img 
                      src={comentario.author_details.avatar_path ? `https://image.tmdb.org/t/p/w45${comentario.author_details.avatar_path}` : 'https://i.pravatar.cc/45'} 
                      className='foto-avatar-comentario' 
                      alt={`Avatar de ${comentario.author}`} 
                    />
                    <strong>{comentario.author}</strong>
                  </div>

                  {/* A API chama o texto de 'content' */}
                  <p className="comentario-texto">{comentario.content}</p>

                  <div className='estrelas'>
                    {/* A API pode fornecer uma nota dentro de 'author_details' */}
                    {comentario.author_details.rating &&
                      <span> <FaStar className='estrela' /> {comentario.author_details.rating}/10</span>
                    }
                    {/* A API fornece a data em um formato diferente, vamos formatá-la */}
                    <span className="comentario-data">{new Date(comentario.created_at).toLocaleDateString('pt-BR')}</span>
                  </div>
                </div>
              ))
            }
          </div>
      </div>
    </div>
  );
}

export default ComentariosContainer;